{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "PE",
    "description" : "MyMusic",
    "contact" : {
      "email" : "nastya.vasileva.1954@mail.ru"
    },
    "version" : "1.0.2"
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/Juliasunn/MusicServiceAPI/1.0.2"
  }, {
    "url" : "http://localhost/api/v1/",
    "description" : "MyMusic API"
  } ],
  "tags" : [ {
    "name" : "traks",
    "description" : "info about tracks"
  }, {
    "name" : "users",
    "description" : "user of the application"
  }, {
    "name" : "favorites",
    "description" : "favorite track of user"
  }, {
    "name" : "account",
    "description" : "account data of logged users"
  } ],
  "paths" : {
    "/traks" : {
      "get" : {
        "tags" : [ "traks" ],
        "summary" : "Returns a list of traks.",
        "security" : [ {
          "jwt_auth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "trak name",
          "in" : "query",
          "description" : "name of trak that user wants to find.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TraksList"
                }
              }
            }
          },
          "401" : {
            "description" : "User was not authorized"
          },
          "400" : {
            "description" : "Invalid data format"
          }
        }
      },
      "post" : {
        "tags" : [ "traks" ],
        "summary" : "Sends a new mp3 file to server and checks admimistrator rights.",
        "security" : [ {
          "jwt_auth" : [ ]
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Name" : {
                    "type" : "string"
                  },
                  "Artist" : {
                    "type" : "string"
                  },
                  "Genre" : {
                    "type" : "string"
                  },
                  "FileMP3" : {
                    "type" : "string",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success"
          },
          "400" : {
            "description" : "Invalid data format"
          },
          "401" : {
            "description" : "User was not authorized"
          },
          "403" : {
            "description" : "User has not rights for posting traks"
          }
        }
      }
    },
    "/traks/{guid}" : {
      "get" : {
        "tags" : [ "traks" ],
        "summary" : "Returns a trak by guid.",
        "security" : [ {
          "jwt_auth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "guid",
          "in" : "path",
          "description" : "guid of the trak that user wants to get.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Trak"
                }
              }
            }
          },
          "404" : {
            "description" : "trak not found"
          },
          "401" : {
            "description" : "User was not authorized"
          },
          "400" : {
            "description" : "Invalid data format"
          }
        }
      }
    },
    "/users/registration" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Register a user",
        "requestBody" : {
          "description" : "new user account data.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Token" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid username/password supplied"
          },
          "409" : {
            "description" : "User already exists"
          },
          "400" : {
            "description" : "Invalid data format"
          }
        }
      }
    },
    "/users/login" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Logs user in app",
        "requestBody" : {
          "description" : "users login and password.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Token" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid username/password supplied"
          },
          "400" : {
            "description" : "Invalid data format"
          }
        }
      }
    },
    "/account" : {
      "get" : {
        "tags" : [ "account" ],
        "summary" : "Returns account data of logged user",
        "security" : [ {
          "jwt_auth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Login" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User was not authorized"
          },
          "400" : {
            "description" : "Invalid data format"
          }
        }
      },
      "patch" : {
        "tags" : [ "account" ],
        "summary" : "Changes account data of logged user",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "NewPassword" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "jwt_auth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "success"
          },
          "400" : {
            "description" : "Invalid data format"
          },
          "401" : {
            "description" : "User was not authorized"
          },
          "404" : {
            "description" : "Account not found"
          }
        }
      }
    },
    "/favorites" : {
      "get" : {
        "tags" : [ "favorites" ],
        "summary" : "Returns list of favorite tracks of a user.",
        "security" : [ {
          "jwt_auth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TraksList"
                }
              }
            }
          },
          "401" : {
            "description" : "User was not authorized"
          },
          "400" : {
            "description" : "Invalid data format"
          }
        }
      }
    },
    "/favorites/{guid}" : {
      "get" : {
        "tags" : [ "favorites" ],
        "summary" : "Returns a trak from favorite.",
        "security" : [ {
          "jwt_auth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "guid",
          "in" : "path",
          "description" : "Id of the trak that user wants to add tp favorites.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Trak"
                }
              }
            }
          },
          "401" : {
            "description" : "User was not authorized"
          },
          "404" : {
            "description" : "trak not found"
          },
          "400" : {
            "description" : "Invalid data format"
          }
        }
      },
      "delete" : {
        "tags" : [ "favorites" ],
        "summary" : "delete trak from favorites",
        "security" : [ {
          "jwt_auth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "guid",
          "in" : "path",
          "description" : "Id of the trak that user wants to delete from  favorites.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success"
          },
          "401" : {
            "description" : "User was not authorized"
          },
          "404" : {
            "description" : "trak not found"
          },
          "400" : {
            "description" : "Invalid data format"
          }
        }
      },
      "post" : {
        "tags" : [ "favorites" ],
        "summary" : "add trak to  favorites",
        "security" : [ {
          "jwt_auth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "guid",
          "in" : "path",
          "description" : "Id of the trak that user wants to add tp favorites.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success"
          },
          "401" : {
            "description" : "User was not authorized"
          },
          "404" : {
            "description" : "trak not found"
          },
          "400" : {
            "description" : "Invalid data format"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Trak" : {
        "type" : "object",
        "properties" : {
          "Guid" : {
            "type" : "integer",
            "example" : 4
          },
          "Name" : {
            "type" : "string",
            "example" : "Sweather weather"
          },
          "Artist" : {
            "type" : "string",
            "example" : "The neiborhood"
          },
          "Genre" : {
            "type" : "string",
            "example" : "indi"
          },
          "FileUrl" : {
            "type" : "string",
            "example" : "SweatherWeather.mp3"
          }
        }
      },
      "TraksList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Trak"
        }
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "login" : {
            "type" : "string",
            "example" : "Juliasunn"
          },
          "password" : {
            "type" : "string",
            "example" : "password123"
          }
        }
      }
    },
    "securitySchemes" : {
      "jwt_auth" : {
        "type" : "http",
        "bearerFormat" : "JWT",
        "scheme" : "bearer"
      }
    }
  }
}